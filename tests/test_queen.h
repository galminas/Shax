#ifndef TEST_QUEEN_H
#define TEST_QUEEN_H
#include <gtest/gtest.h>

extern "C" {
#include "func.h"
}
TEST(moveQueen,t1){
    int board[8][8] = {{-4, -1, -2, 0, -3, -2, -1, -4},
                       {-6, -6, -6, -6, -6, -6, -6, -6},
                       { 0,  0,  0,  0,  0,  0,  0,  0},
                       { 0,  -5,  0,  0,  0,  0,  0,  0},
                       { 0,  0,  0,  0,  0,  0,  0,  0},
                       { 0,  0,  0,  0,  0,  0,  0,  0},
                       { 6,  6,  6,  6,  6,  6,  6,  6},
                       { 4,  1,  2,  5,  3,  2,  1,  4}};
    ASSERT_EQ(moveQueen(1,3,4,3,board),1);
}
TEST(moveQueen,t2){
    int board[8][8] = {{-4, -1, -2, 0, -3, -2, -1, -4},
                       {-6, -6, -6, -6, -6, -6, -6, -6},
                       { 0,  0,  0,  0,  0,  0,  0,  0},
                       { 0,  -5,  0,  0,  0,  0,  0,  0},
                       { 0,  0,  0,  0,  0,  0,  0,  0},
                       { 0,  0,  0,  0,  0,  0,  0,  0},
                       { 6,  6,  6,  6,  6,  6,  6,  6},
                       { 4,  1,  2,  5,  3,  2,  1,  4}};
    ASSERT_EQ(moveQueen(1,3,1,1,board),0);
}
TEST(moveQueen,t3){
    int board[8][8] = {{-4, -1, -2, 0, -3, -2, -1, -4},
                       {-6, -6, -6, -6, -6, -6, -6, -6},
                       { 0,  0,  0,  0,  0,  0,  0,  0},
                       { 0,  -5,  0,  0,  0,  0,  0,  0},
                       { 0,  0,  0,  0,  0,  0,  0,  0},
                       { 0,  0,  0,  0,  0,  0,  0,  0},
                       { 6,  6,  6,  6,  6,  6,  6,  6},
                       { 4,  1,  2,  5,  3,  2,  1,  4}};
    ASSERT_EQ(moveQueen(1,3,2,4,board),1);
}

#endif // TEST_QUEEN_H
